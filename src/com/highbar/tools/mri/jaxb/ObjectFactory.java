//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.9-03/31/2009 04:14 PM(snajper)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.06.15 at 12:50:48 PM KST 
//


package com.highbar.tools.mri.jaxb;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link XMethodSummary }
     * 
     */
    public XMethodSummary createXMethodSummary() {
        return new XMethodSummary();
    }

    /**
     * Create an instance of {@link XMissingTrigger }
     * 
     */
    public XMissingTrigger createXMissingTrigger() {
        return new XMissingTrigger();
    }

    /**
     * Create an instance of {@link XEnoviaProfilerReport }
     * 
     */
    public XEnoviaProfilerReport createXEnoviaProfilerReport() {
        return new XEnoviaProfilerReport();
    }

    /**
     * Create an instance of {@link XStackTrace }
     * 
     */
    public XStackTrace createXStackTrace() {
        return new XStackTrace();
    }

    /**
     * Create an instance of {@link XMethodParameter }
     * 
     */
    public XMethodParameter createXMethodParameter() {
        return new XMethodParameter();
    }

    /**
     * Create an instance of {@link XTrigger }
     * 
     */
    public XTrigger createXTrigger() {
        return new XTrigger();
    }

    /**
     * Create an instance of {@link XTriggerManagerOverhead }
     * 
     */
    public XTriggerManagerOverhead createXTriggerManagerOverhead() {
        return new XTriggerManagerOverhead();
    }

    /**
     * Create an instance of {@link XExecutionNode }
     * 
     */
    public XExecutionNode createXExecutionNode() {
        return new XExecutionNode();
    }

}
