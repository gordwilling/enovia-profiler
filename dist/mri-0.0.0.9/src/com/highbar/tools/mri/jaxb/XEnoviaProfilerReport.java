//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.9-03/31/2009 04:14 PM(snajper)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.06.15 at 12:50:48 PM KST 
//


package com.highbar.tools.mri.jaxb;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for xEnoviaProfilerReport complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="xEnoviaProfilerReport">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="activeTriggers" type="{}xTrigger" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="inactiveTriggers" type="{}xTrigger" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="methodSummary" type="{}xMethodSummary" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="missingTriggers" type="{}xMissingTrigger" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="overhead" type="{}xTriggerManagerOverhead" minOccurs="0"/>
 *         &lt;element name="stackTraces" type="{}xStackTrace" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlRootElement(name="EnoviaProfilerReport")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "xEnoviaProfilerReport", propOrder = {
    "activeTriggers",
    "inactiveTriggers",
    "methodSummary",
    "missingTriggers",
    "overhead",
    "stackTraces"
})
public class XEnoviaProfilerReport {

    @XmlElement(nillable = true)
    protected List<XTrigger> activeTriggers;
    @XmlElement(nillable = true)
    protected List<XTrigger> inactiveTriggers;
    @XmlElement(nillable = true)
    protected List<XMethodSummary> methodSummary;
    @XmlElement(nillable = true)
    protected List<XMissingTrigger> missingTriggers;
    protected XTriggerManagerOverhead overhead;
    @XmlElement(nillable = true)
    protected List<XStackTrace> stackTraces;

    /**
     * Gets the value of the activeTriggers property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the activeTriggers property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getActiveTriggers().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link XTrigger }
     * 
     * 
     */
    public List<XTrigger> getActiveTriggers() {
        if (activeTriggers == null) {
            activeTriggers = new ArrayList<XTrigger>();
        }
        return this.activeTriggers;
    }

    /**
     * Gets the value of the inactiveTriggers property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the inactiveTriggers property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInactiveTriggers().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link XTrigger }
     * 
     * 
     */
    public List<XTrigger> getInactiveTriggers() {
        if (inactiveTriggers == null) {
            inactiveTriggers = new ArrayList<XTrigger>();
        }
        return this.inactiveTriggers;
    }

    /**
     * Gets the value of the methodSummary property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the methodSummary property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMethodSummary().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link XMethodSummary }
     * 
     * 
     */
    public List<XMethodSummary> getMethodSummary() {
        if (methodSummary == null) {
            methodSummary = new ArrayList<XMethodSummary>();
        }
        return this.methodSummary;
    }

    /**
     * Gets the value of the missingTriggers property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the missingTriggers property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMissingTriggers().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link XMissingTrigger }
     * 
     * 
     */
    public List<XMissingTrigger> getMissingTriggers() {
        if (missingTriggers == null) {
            missingTriggers = new ArrayList<XMissingTrigger>();
        }
        return this.missingTriggers;
    }

    /**
     * Gets the value of the overhead property.
     * 
     * @return
     *     possible object is
     *     {@link XTriggerManagerOverhead }
     *     
     */
    public XTriggerManagerOverhead getOverhead() {
        return overhead;
    }

    /**
     * Sets the value of the overhead property.
     * 
     * @param value
     *     allowed object is
     *     {@link XTriggerManagerOverhead }
     *     
     */
    public void setOverhead(XTriggerManagerOverhead value) {
        this.overhead = value;
    }

    /**
     * Gets the value of the stackTraces property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the stackTraces property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getStackTraces().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link XStackTrace }
     * 
     * 
     */
    public List<XStackTrace> getStackTraces() {
        if (stackTraces == null) {
            stackTraces = new ArrayList<XStackTrace>();
        }
        return this.stackTraces;
    }

}
